// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  fullName      String?
  avatarUrl     String?
  auth0Id       String    @unique @default("")
  updatedAt     DateTime?
  paymentMethod Json?
  email         String    @unique
}

model Workspace {
  id             String         @id @default(uuid())
  createdAt      DateTime       @default(now())
  workspaceOwner String
  title          String
  iconId         String
  data           String?
  inTrash        String?
  logo           String?
  bannerUrl      String?
  folders        Folder[]
  File           File[]
  Collaborator   Collaborator[]
}

model Folder {
  id          String    @id @default(uuid())
  createdAt   DateTime  @default(now())
  title       String
  iconId      String
  data        String?
  inTrash     String?
  bannerUrl   String?
  workspace   Workspace @relation(fields: [workspaceId], references: [id])
  workspaceId String
  files       File[]
}

model File {
  id          String    @id @default(uuid())
  createdAt   DateTime  @default(now())
  title       String
  iconId      String
  data        String?
  inTrash     String?
  bannerUrl   String?
  workspace   Workspace @relation(fields: [workspaceId], references: [id])
  workspaceId String
  folder      Folder    @relation(fields: [folderId], references: [id])
  folderId    String
}

model Collaborator {
  workspace   Workspace @relation(fields: [workspaceId], references: [id])
  createdAt   DateTime  @default(now())
  userId      String    @id @default(uuid())
  id          String    @default(uuid())
  workspaceId String
}
